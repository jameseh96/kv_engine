def getProjectName() {
    return env.JOB_NAME.tokenize("/")[-2]
}

def loadEnvFiles() {
    def base = "commit-validation/${getProjectName()}.groovy"
    def overrides = "commit-validation/${getProjectName()}-${BRANCH_NAME}.groovy"
    for (fileName in [base, overrides]) {
        if (fileExists(fileName)) {
            load fileName
        }
    }
}

properties([pipelineTriggers([gerrit(customUrl: '',
                                    serverName: 'review.couchbase.org',
                                    silentStartMode: true,
                                    gerritProjects: [[branches: [[compareType: 'PLAIN',
                                                                   pattern: env.BRANCH_NAME]],
                                                       compareType: 'PLAIN',
                                                       disableStrictForbiddenFileVerification: false,
                                                       pattern: 'kv_engine']],
                                    triggerOnEvents: [patchsetCreated(excludeDrafts: true,
                                                                       excludeNoCodeChange: false,
                                                                       excludeTrivialRebase: false),
                                                      draftPublished()])])])

pipeline {
    agent none
    stages {
        stage("Run single-project"){
            agent { label 'mac' }
            steps {
                checkout([$class: 'RepoScm',
                    currentBranch: true,
                    jobs: 8,
                    manifestFile: 'branch-master.xml',
                    manifestGroup: 'build,kv',
                    manifestRepositoryUrl: 'https://github.com/couchbase/manifest',
                    quiet: true,
                    resetFirst: true]) 
                loadEnvFiles()
            }
        }
    }
}
